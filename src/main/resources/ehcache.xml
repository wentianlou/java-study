<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://www.ehcache.org/ehcache.xsd"
         updateCheck="false">
    <!-- 磁盘存储:将缓存中暂时不使用的对象,转移到硬盘,类似于Windows系统的虚拟内存 path:指定在硬盘上存储对象的路径。 -->
    <!-- 当内存缓存中对象数量超过maxElementsInMemory时,将缓存对象写到磁盘缓存中，需对象实现序列化接口。 -->
    <diskStore path="java.io.tmpdir" />
    <!-- defaultCache:默认的缓存配置信息,如果不加特殊说明,则所有对象按照此配置项处理 maxElementsInMemory:设置了缓存的上限,最多存储多少个记录对象
        eternal:代表对象是否永不过期 timeToIdleSeconds:最大的发呆时间 timeToLiveSeconds:最大的存活时间 overflowToDisk:是否允许对象被写入到磁盘 -->
    <defaultCache maxElementsInMemory="10000" eternal="false" timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="true" />
    <!-- cache:为指定名称的对象进行缓存的特殊配置 name:指定对象的完整名 -->
    <!-- name:缓存名称,cache的唯一标识(ehcache会把这个cache放到HashMap里) -->
    <!-- maxElementsOnDisk:磁盘缓存中最多可以存放的元素数量,0表示无穷大 -->
    <!-- maxElementsInMemory:内存缓存中最多可以存放的元素数量,若放入Cache中的元素超过这个数值,则有以下两种情况
         1)若overflowToDisk=true,则会将Cache中多出的元素放入磁盘文件中
         2)若overflowToDisk=false,则根据memoryStoreEvictionPolicy策略替换Cache中原有的元素 -->
    <!-- eternal:缓存中对象是否永久有效,即是否永驻内存,true时将忽略timeToIdleSeconds和timeToLiveSeconds -->
    <!-- timeToIdleSeconds==缓存数据在失效前的允许闲置时间(单位:秒),仅当eternal=false时使用,默认值是0表示可闲置时间无穷大,
         此为可选属性，即访问这个cache中元素的最大间隔时间,若超过这个时间没有访问此Cache中的某个元素,那么此元素将被从Cache中清除 -->
    <!-- timeToLiveSeconds:缓存数据在失效前的允许存活时间(单位:秒),仅当eternal=false时使用,默认值是0表示可存活时间无穷大，
         即从创建开始计时,当超过这个时间时,此元素将从Cache中清除 -->
    <!-- overflowToDisk:内存不足时,是否启用磁盘缓存(即内存中对象数量达到maxElementsInMemory时,Ehcache会将对象写到磁盘中) ，
         会根据标签中path值查找对应的属性值,写入磁盘的文件会放在path文件夹下,文件的名称是cache的名称,后缀名是data -->
    <!-- diskPersistent:是否持久化磁盘缓存,当这个属性的值为true时,系统在初始化时会在磁盘中查找文件名为cache名称,后缀名为index的文件，
         这个文件中存放了已经持久化在磁盘中的cache的index,找到后会把cache加载到内存。要想把cache真正持久化到磁盘,写程序时注意执行net.sf.ehcache.Cache.put(Element element)后要调用flush()方法。 -->
    <!-- diskExpiryThreadIntervalSeconds:磁盘缓存的清理线程运行间隔,默认是120秒 -->
    <!-- diskSpoolBufferSizeMB:设置DiskStore（磁盘缓存）的缓存区大小,默认是30MB -->
    <!-- memoryStoreEvictionPolicy:内存存储与释放策略,即达到maxElementsInMemory限制时,Ehcache会根据指定策略清理内存。 -->
    <cache name="user" maxElementsInMemory="100" eternal="false" timeToIdleSeconds="300" timeToLiveSeconds="600" overflowToDisk="true" />
</ehcache>